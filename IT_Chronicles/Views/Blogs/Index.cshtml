@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model IT_Chronicles.Models.ViewModels.BlogDetailsViewModel

@{
	ViewData["Title"] = Model.PageTitle;
}

<div class="container my-5">
	<div class="row justify-content-center">
		<div class="col-12 col-lg-6">
			@if(Model != null )
			{
               <h2 class="mb-3">@Model.Heading</h2>

			 <div class="d-flex justify-content-between mb-3">

				<span class="text-dark">@Model.Author</span>
				<span class="text-dark">@Model.PublishedDate.ToShortDateString()</span>
				
			 </div>

				<div class="mb-3">

					@if (signInManager.IsSignedIn(User))
					{
						if (Model.Liked)
						{
							<a style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
							</a>
						}
						else
						{
							<a id="buttonLike" style="cursor: pointer;">
								<i class="bi bi-hand-thumbs-up"></i>
							</a>
						}
						
					}

					<span id="totalLikes">@Model.TotalLikes</span>
					likes

			   

			 </div>

			 <div class="mb-3 d-flex">
				@foreach(var tag in Model.Tags)
				{

					<span class="badge bg-secondary me-1">@tag.Name</span>
					

				}
					

			 </div>
				<a class="btn" asp-area="" asp-controller="Home" asp-action="Index">Back</a>

			   <img src="@Model.FeaturedImageUrl" class="d-block img-fluid"/>

			 <div class="mb-3 text-light">
				@Html.Raw(Model.Content)
			 </div>

			
				<div class="card">
					<div class="card-header">
						<h5 class="text-dark mb-2">Comments</h5>

						@if (signInManager.IsSignedIn(User))
						{
							<form method="post">

								<div class="mb-3">
									<label class="form-label text-dark">Comment Description</label>
									<input type="text" class="form-control text-success" asp-for="CommentDescription" />
								</div>

								<div class="mb-3">
									<button type="submit" class="btn btn-secondary text-light">Submit</button>
									<input type="hidden" asp-for="Id"/>
									<input type="hidden" asp-for="UrlHandle"/>
								</div>

							</form>
						}

					</div>
					<div class="card-body">

						@if(Model.Comments != null && Model.Comments.Any())
						{
							@foreach (var comment in Model.Comments)
							{
								<div class="card mb-3">
									<div class="card-body">
										@comment.Description
									</div>
									<div class="d-flex justify-content-between">
										<span class="text-dark">@comment.UserName</span>
										<span class="text-dark">@comment.DateAdded.ToShortDateString()</span>
									</div>
								</div>
							}
						
						}

					</div>
				</div>
			}
			else
			{
				<p>Blog post not found !</p>
			}

		</>
	</div>
</div>
@section Scripts {
	<script>
		const btnLikeElement = document.getElementById('buttonLike');
		const totalLikeElement = document.getElementById('totalLikes');

		async function getTotalLikes() {
			fetch('/api/blogpostlike/@Model.Id/totallikes', {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*'
				}
			})
				.then(data => data.json())
				.then(result => totalLikeElement.innerHTML = result);
		}

		async function addLikeForBlog() {
			fetch('/api/BlogPostLike/Add', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
					'Accept': '*/*'
				},
				body: JSON.stringify({
					blogPostId: '@Model.Id',
					UserId: '@userManager.GetUserId(User)'
				})
			}).then(() => {

				btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
				btnLikeElement.removeEventListener('click', addLikeForBlog);
				getTotalLikes();

			});
		}


		btnLikeElement.addEventListener('click', addLikeForBlog);
	</script>

}